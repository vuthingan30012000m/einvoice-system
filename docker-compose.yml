version: "3.4"

services:

  nats:
    image: nats
    restart: always
    ports:
      - 4222:4222

  mysql:
    image: mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: nghia
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_user
      MYSQL_TCP_PORT: 3306

  api_gateway:
    build: ./microservices/api-gateway
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./microservices/api-gateway/src:/usr/src/app/src
      - ./microservices/api-gateway/node_modules:/usr/src/app/node_modules
    command: npm run start:dev
    environment:
      NATS_SERVICE: 'nats://nats'

  user:
    build: ./microservices/user-service
    restart: always
    volumes:
      - ./microservices/user-service/src:/usr/src/app/src
      - ./microservices/user-service/node_modules:/usr/src/app/node_modules
    command: npm run start:dev
    environment:
      NATS_SERVICE: 'nats://nats'

  invoice:
    build: ./microservices/invoice-service
    restart: always
    volumes:
      - ./microservices/invoice-service/src:/usr/src/app/src
      - ./microservices/invoice-service/node_modules:/usr/src/app/node_modules
    command: npm run start:dev
    environment:
      NATS_SERVICE: 'nats://nats'

#   zookeeper:
#     image: bitnami/zookeeper
#     restart: always
#     ports:
#       - "2181:2181"
#     volumes:
#       - "zookeeper_data:/bitnami"
#     environment:
#       - ALLOW_ANONYMOUS_LOGIN=yes







#   kafka:
#     image: bitnami/kafka
#     ports:
#       - "9092:9092"
#     restart: always
#     volumes:
#       - "kafka_data:/bitnami"
#     environment:
#       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#       - ALLOW_PLAINTEXT_LISTENER=yes
#       - KAFKA_LISTENERS=PLAINTEXT://:9092
#       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
#     depends_on:
#       - zookeeper

# volumes:
#   zookeeper_data:
#     driver: local
#   kafka_data:
#     driver: local
