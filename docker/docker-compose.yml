version: "3.4"

services:

  nats:
    image: nats
    restart: always
    ports:
      - 4222:4222

  mysql:
    image: mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: nghia
      MYSQL_DATABASE: nghia
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_user
      MYSQL_TCP_PORT: 3306
    command: --init-file /init.sql
    volumes:
      - ./mysql/var/lib/mysql:/var/lib/mysql
      - ./mysql/init.sql:/init.sql

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025

  api_gateway:
    build: ../microservices/api-gateway
    restart: always
    ports:
      - 3001:3001
    volumes:
      - ../microservices/api-gateway:/usr/src/app
    command: npm run start:dev
    environment:
      PORT: ${APP_PORT}
      
      NATS_SERVICE: ${NATS_SERVICE}


  user:
    build: ../microservices/user-service
    restart: always
    volumes:
      - ../microservices/user-service:/usr/src/app
    command: npm run start:dev
    environment:
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
      APP_DOMAIN: ${APP_DOMAIN}



      NATS_SERVICE: ${NATS_SERVICE}

      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: user

      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}







  # invoice:
  #   build: ../microservices/invoice-service
  #   restart: always
  #   volumes:
  #     - ../microservices/invoice-service:/usr/src/app
  #   command: npm run start:dev
  #   environment:
  #     NATS_SERVICE: ${NATS_SERVICE}

  #     DATABASE_HOST: ${DATABASE_HOST}
  #     DATABASE_PORT: ${DATABASE_PORT}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     DATABASE_NAME: invoice

  # report:
  #   build: ../microservices/report-service
  #   restart: always
  #   volumes:
  #     - ../microservices/report-service:/usr/src/app
  #   command: npm run start:dev
  #   environment:
  #     NATS_SERVICE: ${NATS_SERVICE}

  #     DATABASE_HOST: ${DATABASE_HOST}
  #     DATABASE_PORT: ${DATABASE_PORT}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     DATABASE_NAME: report


  #   zookeeper:
  #     image: bitnami/zookeeper
  #     restart: always
  #     ports:
  #       - "2181:2181"
  #     volumes:
  #       - "zookeeper_data:/bitnami"
  #     environment:
  #       - ALLOW_ANONYMOUS_LOGIN=yes







  #   kafka:
  #     image: bitnami/kafka
  #     ports:
  #       - "9092:9092"
  #     restart: always
  #     volumes:
  #       - "kafka_data:/bitnami"
  #     environment:
  #       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #       - ALLOW_PLAINTEXT_LISTENER=yes
  #       - KAFKA_LISTENERS=PLAINTEXT://:9092
  #       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
  #     depends_on:
  #       - zookeeper

  # volumes:
  #   zookeeper_data:
  #     driver: local
  #   kafka_data:
  #     driver: local
